[
    // Comment line + jump to next line
    {
        "key": "cmd+/",
        "command": "runCommands",
        "args": {
            "commands": [
                "editor.action.commentLine",
                "cursorDown"
            ]
        },
        "when": "editorTextFocus && !editorReadonly"
    },
    // Delete line
    {
        "key": "cmd+backspace",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Duplicate line
    {
        "key": "cmd+d",
        "command": "runCommands",
        "args": {
            "commands": [
                "editor.action.copyLinesUpAction",
                "cursorDown"
            ]
        },
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    // Bars
    {
        "key": "alt+f1",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "alt+f2",
        "command": "workbench.action.toggleSidebarVisibility",
    },
    {
        "key": "alt+f2",
        "command": "-editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+f3",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "alt+f4",
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    // Toggle exporer
    {
        "key": "cmd+1",
        "command": "workbench.view.explorer",
        "when": "!sideBarFocus || (sideBarFocus && activeViewlet != 'workbench.view.explorer')",
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.closeSidebar",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'",
    },
    {
        "key": "cmd+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    // Focus editor on Esc
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && !(listFocus && treeFindOpen)"
    },
    // Shift+Esc closes panel then sidebar
    {
        "key": "shift+escape",
        "command": "workbench.action.activityBarLocation.hide",
        "when": "activityBarLocation != 'hidden'"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.closeSidebar",
        "when": "sideBarVisible"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.closePanel",
        "when": "panelVisible"
    },
    // Recent files navigation    
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "cmd+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    // Command Palette
    {
        "key": "shift shift",
        "command": "workbench.action.showCommands"
    },
    // Format
    {
        "key": "cmd+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    // Clear terminal
    {
        "key": "cmd+r",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    // Centered layout
    {
        "key": "cmd+0",
        "command": "workbench.action.toggleCenteredLayout"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    // Select list element and Open explorer file
    {
        "key": "space",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "space",
        "command": "explorer.openAndPassFocus",
        "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "space",
        "command": "-filesExplorer.openFilePreserveFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    // Open explorer file preserving focus at explorer
    {
        "key": "alt+space",
        "command": "filesExplorer.openFilePreserveFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    // Cursor Home
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-cursorLineStart",
        "when": "textInputFocus"
    },
     // Next/Prev Word
     {
        "key": "ctrl+w",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "cursorWordLeft",
        "when": "textInputFocus"
    },
    // Next/Prev window
    {
        "key": "cmd+shift+[",
        "command": "workbench.action.showPreviousWindowTab",
    },
    {
        "key": "cmd+shift+]",
        "command": "workbench.action.showNextWindowTab",
    },
    {
        "key": "cmd+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Debug
    {
        "key": "f3",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f3",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f3",
        "command": "debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f5",
        "command": "-debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    
    // Recent projects
    {
        "key": "alt+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    // Close window
    {
        "key": "alt+w",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "shift+cmd+w",
        "command": "-workbench.action.closeWindow"
    },
    // Bookmarks
    {
        "key": "alt+b",
        "command": "bookmarksExplorer.focus"
    },
    // Zoom
    {
        "key": "cmd+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+=",
        "command": "workbench.action.increaseViewSize"
    },
    {
        "key": "cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+-",
        "command": "workbench.action.decreaseViewSize"
    },
    // Go to File
    {
        "key": "cmd+e",
        "command": "extension.quickOpen.withPrefill",
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+e",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    // Copy file path
    {
        "key": "shift+cmd+c",
        "command": "copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "shift+cmd+c",
        "command": "copyFilePath",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k alt+cmd+c",
        "command": "-copyFilePath",
        "when": "editorFocus"
    },
    // Meta Go
    {
        "key": "shift+space",
        "command": "metaGo.gotoBefore"
    },
    {
        "key": "alt+f",
        "command": "-jump-and-select.jumpForward",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+d",
        "command": "-metaGo.metaJump.deleteToSmart",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+.",
        "command": "-metaGo.addCursorAfter"
    },
    {
        "key": "ctrl+alt+,",
        "command": "-metaGo.addCursorBefore"
    },
    {
        "key": "ctrl+alt+/",
        "command": "-metaGo.addCursorSmart"
    },
    {
        "key": "shift+alt+.",
        "command": "-metaGo.selectAfter",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+,",
        "command": "-metaGo.selectBefore",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+/",
        "command": "-metaGo.selectSmart",
        "when": "editorTextFocus"
    },
    {
        "key": "tab",
        "command": "-metaGo.metaJump.tab",
        "when": "editorTextFocus && metaGoJumping"
    },
    {
        "key": "alt+,",
        "command": "-metaGo.gotoBefore"
    },
    {
        "key": "alt+.",
        "command": "-metaGo.gotoAfter"
    },
    {
        "key": "alt+delete",
        "command": "-metaGo.metaJump.deleteToAfter",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+backspace",
        "command": "-metaGo.metaJump.deleteToBefore",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+h",
        "command": "metaGo.metaJump.hideDecoration",
        "when": "editorTextFocus && metaGoJumping"
    },
    {
        "key": "shift+space",
        "command": "-metaGo.metaJump.hideDecoration",
        "when": "editorTextFocus && metaGoJumping"
    },
    // Delete Right
    {
        "key": "ctrl+backspace",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "textInputFocus"
    },
    // Select to end of line
    {
        "key": "cmd+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.terminal.splitActiveTab",
        "when": "terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.quickFix"
    },
    // Reveal file in Explorer
    {
        "key": "cmd+f1",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "shift+cmd+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "cmd+k cmd+e",
        "command": "-keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "workbench.action.reloadWindow"
    },
    // Quick Open
    {
        "key": "cmd+[Backquote]",
        "command": "workbench.action.openPreviousEditorFromHistory"
    },
    {
        "key": "cmd+[Backquote]",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inFilesPicker && inQuickOpen"
    },
    // Navigate Back/Forward
    {
        "key": "cmd+3",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "cmd+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+f",
        "command": "list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "cmd+f",
        "command": "-list.find",
        "when": "listFocus && listSupportsFind"
    },
]